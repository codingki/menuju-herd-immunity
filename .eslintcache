[{"D:\\tailwind\\menuju-hi\\src\\index.js":"1","D:\\tailwind\\menuju-hi\\src\\App.js":"2","D:\\tailwind\\menuju-hi\\src\\Fetch.js":"3","D:\\tailwind\\menuju-hi\\src\\components\\Phase.js":"4","D:\\tailwind\\menuju-hi\\src\\components\\KandidatVaksin.js":"5"},{"size":515,"mtime":1611539192594,"results":"6","hashOfConfig":"7"},{"size":16915,"mtime":1611748983729,"results":"8","hashOfConfig":"7"},{"size":1239,"mtime":1611715761621,"results":"9","hashOfConfig":"7"},{"size":573,"mtime":1611587182821,"results":"10","hashOfConfig":"7"},{"size":979,"mtime":1611642806523,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vcfe1a",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\tailwind\\menuju-hi\\src\\index.js",[],["23","24"],"D:\\tailwind\\menuju-hi\\src\\App.js",["25"],"D:\\tailwind\\menuju-hi\\src\\Fetch.js",[],"D:\\tailwind\\menuju-hi\\src\\components\\Phase.js",[],"D:\\tailwind\\menuju-hi\\src\\components\\KandidatVaksin.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":30,"column":12,"nodeType":"32","endLine":47,"endColumn":3},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]